#!/usr/bin/env ruby

#    Copyright (C) 2011 Nils Eriksson
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.


Path = File.expand_path(File.dirname( File.symlink?(__FILE__) ? File.readlink(__FILE__) : __FILE__ ))
$: << Path
Debug = ARGV.include? '-D'

require 'rubygems'
require 'clipboard'
require 'ruby-debug' if Debug
require 'yaml'
require 'readline'
require 'observer'
require 'erb'
require "controllers.rb"
require "models.rb"
require "views.rb"


class Factory
  @@objects = []
  def self.get _class
    for object in @@objects
      return object if object.class == eval(_class.to_s)
    end
    object = eval(_class.to_s).new
    @@objects.push object
    object
  end
end

class Router
  def initialize
    @routes = []
  end

  def add_route route
    @routes.push route
  end

  def clear_routes
    @routes = []
  end

  def route input
    @routes.each do |route|
      if input.match route[:match]
        return route[:controller], route[:action], route[:input].nil? ? input : route[:input]
      end
    end
    puts "Bye!"
    exit
  end
end

class Application
  def initialize
    @router = Factory::get(:Router)
  end

  def run
    dispatch ['Category', 'index']
    get_input
  end

  def get_input
    while input = Readline.readline('--> ', true)
      route = @router.route input
      @router.clear_routes
      dispatch route
    end
  end

  def dispatch args
    controller, action, input= args.map &:to_s
    puts "Dispatching: #{controller}, #{action}, #{input}" if Debug
    if input.nil?
      Factory::get(controller+'Controller').send action
    else
      Factory::get(controller+'Controller').send action, input
    end
  end
end

Factory::get(:Application).run